plugins {
    id("groovy") 
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.4"
    id("io.micronaut.test-resources") version "4.0.4"
    id("io.micronaut.aot") version "4.0.4"
    id "org.flywaydb.flyway" version "6.4.3"
}

version = "0.1"
group = "com.wozniacki"

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation('io.micronaut:micronaut-http-client:4.1.11')
    implementation("io.micronaut.data:micronaut-data-jdbc:4.1.4")
    implementation("io.micronaut.flyway:micronaut-flyway:6.2.1")
    implementation("io.micronaut.serde:micronaut-serde-jackson:2.2.6")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari:5.1.0")
    compileOnly("org.projectlombok:lombok")
    runtimeOnly("ch.qos.logback:logback-classic:1.4.11")
    runtimeOnly("org.postgresql:postgresql:42.6.0")
    runtimeOnly("org.yaml:snakeyaml")
}


application {
    mainClass.set("com.wozniacki.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

flyway {
    url = 'jdbc:postgresql://ec2-52-215-68-14.eu-west-1.compute.amazonaws.com/dfjvre6h6ai99h'
    user='miicptypyberkd'
    password='76f5e550fbcfa53becc60117d575e47b4808831dfb5ee171e188c4cae6762c3d'
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("com.wozniacki.*")
    }
    aot {
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.wozniacki.Application'
        )
    }
}


task stage(dependsOn: ['build', 'clean'])

build.mustRunAfter clean